NO WAY to configure AutoGenerated DateTime like GETDATE()
MemberwiseClone: for cloning
TPH, TPT,TPC
Independence association: Nav property without Id
Remove all convention: after removing, can't detect [Key]

TODO:
	UnitTest Insert/Update/Delete for Table Splitting
	Unit test for ConcurrencyCheck & TimeStamp: http://geekswithblogs.net/michelotti/archive/2010/10/11/testing-ef4-code-first-optimistic-concurrency-with-fluent-assertions.aspx
	

Convention:
	Must have [Key] property on the dependent entity
	Must have [ForiegnKey] property on the dependant entity
	Denpendent entity must have a Nav property to principal entity
	Can NOT configure table name & column name for the generated table of many-to-many
	Use Naming Convention
	ICollection<T> property is enough for one-to-many
	A Foreign Key property is used for the foreign key name in the "many" table
	Computed property (User.FullName) will NOT be generated. REASON: a class with only getter or setter, but not both, will be ignored
	Usage: DatabaseGeneratedOption.Computed is used to specify a mapping to a database field that is computed. For example, if there was a  FullNamefield in the  Peopletable with a formula that combined the values of  FirstNameand  LastName, you would want to let Entity Framework know so that it would not attempt to save data into that column. You cannot specify the formula to use for a computed column in Code First and, there-fore, you can only use Computedwhen mapping to an existing database. Otherwise, the database provider will throw a runtime exception when it encounters the  Computed configuration while trying to create the database.

DataAnnotation:
	REMOVE ALL CONVENTION FIRST
	[Require] on Nav property to enfornce Cascade Delete One-Many: User-Order
	[Require] on Nav property to enfornce Cascade Delete: NOT work with One-One: User-DrivingLicense
	Known Issue:  Error when class with same name as entity class but in a different namespace http://entityframework.codeplex.com/workitem/911 
	If I add Nav property: Category to product entity without adding a list of Products to Category entity --> Category becomes a Complex type: no key, primitive type, no list in using entity
	DAUser: no need [InverseProperty] for PrimaryContact & SecondaryContact, why ???
	CAN'T DO: Mapping a Single Entity Across Multiple Tables
	---------------------------------------------------------------------------
	TABLE SPITTING:
		The entity types 'Nationality' and 'DAUser' cannot share table 'User' because they are not in the same type hierarchy or do not have a valid one to one foreign key relationship with matching primary keys between them.
		REASON: decorate Nav property in DAUser [Required]: Nationality in DAUSer = Required (User in Nationality = Required DOESN'T make any different)
	---------------------------------------------------------------------------
	To make a new type part of the model (hence generated in DB), there're 3 ways:
		- declare DBSet in context
		- have a reference to that new type: must be ICollection<T> (hence List<T> is ok), can't use IEnumerable. ex: User-Reservation
		- reference it in Fluent: just need an EMPTY config
	Interesting case: User table is splitted into DAUser & Nationality --> can't add DAMembership (inherit from DAUser )as TPH
	TPH: DAProduct-DAProductInStock, notice the Discriminator column
		There is no Data Annotation to customize the TPH mapping column
		Can work with abstract base class
	http://blogs.msdn.com/b/alexj/archive/2009/04/15/tip-12-choosing-an-inheritance-strategy.aspx
	TPT: DAProduct-DAPriductOutOfStock, there's one-one relationship
		When I insert new record to SubType--> EF will automatically insert data to BaseType before hand then get Id of BaseType to insert to SubType
		Can work with abstract base class
	TPC: This can be useful when you set ancient data aside in a spare table
		There is no Data Annotation support for this mapping
Fluent Api:
	Table Splitting: User-Nationality must have WithRequiredPrincipal()
					No need to define the User property in Nationality. Otherwise, it creates a circle relationship in User table
	SingleEntity to MultipleTable: FatEntityForMultiTablesMapping entity
	TPH: ProductMapping
	HasMany().WithRequire() to configure on-many relationship ... Config in dependent entity
	Can't use TPH and TPT same time: Product-ProductInStock-ProductOutOfStock. 
		REASON: Product-ProductInStock creates a new column Discriminator which is NOT NULL
				with ProductOutOfStock (TPT), when we add new record, it inserts to Product table first to get ProductId but WITHOUT Discriminator value --> violation
	Enum support: doesn't support in 4.4 (must be 5)

Database Migration:
	Enable-Migrations
	Add-Migration
	Update-Database
	How to run "Update-Database -Script" in c# code --> save the result script to .sql file: wait for this feature http://entityframework.codeplex.com/workitem/251