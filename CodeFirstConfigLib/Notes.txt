DataAnnotationContext: tables are generated even when I don't define them in the datacontext ie: comment out this line //public DbSet<Order> Orders { get; set; } --> Order table still be created. Why ???
NO WAY to configure AutoGenerated DateTime like GETDATE()
MemberwiseClone: for cloning

TODO:
	Unit test for ConcurrencyCheck & TimeStamp: http://geekswithblogs.net/michelotti/archive/2010/10/11/testing-ef4-code-first-optimistic-concurrency-with-fluent-assertions.aspx
	ComplexType
	Inheritance
	

Convention:
	Must have [Key] property on the dependent entity
	Must have [ForiegnKey] property on the dependant entity
	Denpendent entity must have a Nav property to principal entity
	Can NOT configure table name & column name for the generated table of many-to-many
	Use Naming Convention
	ICollection<T> property is enough for one-to-many
	A Foreign Key property is used for the foreign key name in the "many" table
	Computed property (User.FullName) will NOT be generated. Usage: DatabaseGeneratedOption.Computedis used to specify a mapping to a database field that is computed. For example, if there was a  FullNamefield in the  Peopletable with a formula that combined the values of  FirstNameand  LastName, you would want to let Entity Framework know so that it would not attempt to save data into that column. You cannot specify the formula to use for a computed column in Code First and, there-fore, you can only use Computedwhen mapping to an existing database. Otherwise, the database provider will throw a runtime exception when it encounters the  Computed configuration while trying to create the database.
DataAnnotation:
	Known Issue:  Error when class with same name as entity class but in a different namespace http://entityframework.codeplex.com/workitem/911 
	If I add Nav property: Category to product entity without adding a list of Products to Category entity --> Category becomes a Complex type: no key, primitive type, no list in using entity
